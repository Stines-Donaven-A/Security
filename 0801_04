------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
https://sec.cybbh.io/public/security/latest/lessons/lesson-6-reverse_sg.html -----> REVERSE ENGINEERING FG
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
X86_64 Assembly
16 general purpose 64-Bit registers

- %rax: the first return register
- %rbp: the base pointer that keeps track of the base of the stack
- %rsp: the stack pointer that points to the top of the stack

HEAP - Memory that can be allocated and deallocated
STACK - A contiguous section of memory used for passing arguments
GENERAL REGISTER - A multipurpose register that can be used by either programmer or user to store data or a memory location address
CONTROL REGISTER - A processor register that changes or controls the behavior of a CPU
FLAGS REGISTER - Contains the current state of the processor
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
X86_64 Assembly - Common Instruction Pointers

MOV - move source to destination
PUSH - push source onto stack
POP - Pop top of stack to destination
INC - Increment source by 1
DEC - Decrement source by 1
ADD - Add source to destination
SUB - Subtract source from destination
CMP - Compare 2 values by subtracting them and setting the %RFLAGS register. ZeroFlag set means they are the same.
JMP - Jump to specified location
JLE - Jump if less than or equal
JE - Jump if equal
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Reverse Engineering Workflow (Software)

https://git.cybbh.space/sec/public/-/jobs/artifacts/master/raw/guides/Reverse_engineering_workflow.pdf?job=genpdf
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Portable Executable Patching / Software Analysis
- Perform DEBUGGING and DISASSEMBLY
- Find the SUCCESS/FAILURE
- Adjust INSTRUCTIONS
- Apply Patch and Save
- Execute Patched Binary
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
